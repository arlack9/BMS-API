@Html.AntiForgeryToken()

@* -----------------------------page-top-section--------------- *@

<div class="container">
    <div class="row pt-4">


        @* header-inside *@
        <div class="col-6">
           
            <a class="btn btn-primary" asp-area="" asp-controller="Library" asp-action="AddBook">
            <i class="bi bi-journal-plus"></i>
            Add new Book
                
            </a>

        </div>



        <div class="col-6 text-end">
            <h2>Books</h2>
        </div>


        @* header-inside *@


     @* search-form -start*@
   
    <div class="row mt-3">
        <div class="col-12">
            <form method="get" asp-action="Index">
                <div class="input-group">

                    <input type="text" name="keywords" class="form-control"
                           placeholder="Search by keywords"
                           value="@ViewBag.keywords">


                    <button class="btn btn-outline-secondary" type="submit">
                        <i class="bi bi-search"></i> Search
                    </button>

                    @* redirect to Index if no keywords *@
                    @if (ViewBag.keywords!=null) 
                    {
                        <a class="btn btn-outline-danger" asp-action="Index">
                            <i class="bi bi-x-circle"></i> Reset
                        </a>
                    }

                </div>
            </form>
        </div>
    </div>
    @* search-form-end *@
    </div>
</div>
@* --------------------------------page-top-section--------------------- *@



@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}



@if (ViewBag.Success != null)
{
    <div class="alert alert-success">
        @ViewBag.Success
    </div>
}


@model IEnumerable<Book>
<div class="table-responsive">
    @if ((ViewBag.keywords)!= null)
    {
        <p class="text-muted">Search results for: "<strong>@ViewBag.keywords</strong>"</p>
    }

    @if (Model.Any())
    {
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Author</th>
                    <th>PublishedYear</th>
                    <th>Actions</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var entry in Model)
                {
                    <tr id="book-@entry.Id">
                        <td>
                            @entry.Title
                        </td>
                        <td>
                            @entry.Author
                        </td>
                        <td>
                            @entry.PublishedYear
                        </td>
                        <td>
                            <a asp-action="UpdateBook" asp-route-id="@entry.Id" class="btn btn-sm btn-primary">Edit</a>
                            <button onclick="deleteBook(@entry.Id)" class="btn btn-sm btn-danger">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">
            @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
            {
                <p>No books found matching your search criteria.</p>
            }
            else
            {
                <p>No books available.</p>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        function deleteBook(id) {
            if (confirm("Are you sure you want to delete this book?")) {
                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: "/Library/DeleteBook/" + id,
                    type: "POST",
                    data: {
                        "__RequestVerificationToken": token
                    },
                    success: function(response) {

                        if (response.success) {
                            $("#book-" + id).fadeOut(300, function() {
                                $(this).remove();
                            });


                        } else {
                            alert("Failed to delete book: " + (response.message || "Unknown error"));
                        }
                    },
                    error: function(xhr, status, error) {
                        if (xhr.status === 401) {
                            alert("You are not authorized to delete books. Please login as an admin.");
                        }
                         else {
                            alert("Error deleting book: " + (xhr.responseText || error));
                        }
                        console.error("AJAX Error:", xhr, status, error);
                    }
                });
            }
        }
    </script>
}